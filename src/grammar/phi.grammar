@top PhiGrammar { term }

@skip {space}

@tokens {
    space{(std.whitespace | "\n")+}
    alpha {std.asciiLetter}
    num {std.digit}
    underscore {"_"}
    Locator {"^" (num | $[1-9] num+)}
    Attr {alpha (alpha | num | underscore)*}
    Decorator {"@"}
    VOID {"?"}
    LSQ[closedBy="RSQ"]{ "[" }
    RSQ[openedBy="LSQ"]{ "]"}
    LP[closedBy="RP"]{ "("}
    RP[openedBy="LP"]{ ")"}
    DOT {"."}
}

Mapsto {"->"}

body { Block {LSQ ("" | mapping ("," mapping)*) RSQ} }

mapping { (Attr | Decorator) Mapsto term }

app { term Block {LP ("" | mapping) RP } }

term { term DOT Attr | app | body | Locator | VOID}

@detectDelim